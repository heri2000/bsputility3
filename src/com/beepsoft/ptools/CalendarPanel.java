/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CalendarPanel.java
 *
 * Created on Jun 26, 2009, 3:54:53 PM
 */

package com.beepsoft.ptools;

import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.Insets;
import java.awt.Point;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.WindowListener;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.JButton;

/**
 *
 * @author Heri
 */
public class CalendarPanel extends javax.swing.JPanel {

    private JButton[] calendarButtons;
    private Date tanggal;
    private GregorianCalendar gCal;
    private Font normalFont, selectedFont;
    public static final String[] NAMA_BULAN =
        { "Januari", "Pebruari", "Maret", "April",
        "Mei", "Juni", "Juli", "Agustus",
        "September", "Oktober", "Nopember", "Desember" };
    public static final String[] NAMA_BULAN_PENDEK =
        { "Jan", "Peb", "Mar", "Apr",
        "Mei", "Jun", "Jul", "Agt",
        "Sep", "Okt", "Nop", "Des" };
    public static final String[] NAMA_HARI =
        { "", "Minggu", "Senin", "Selasa", "Rabu", "Kamis",
        "Jumat", "Sabtu" };

    /** Creates new form CalendarPanel */
    public CalendarPanel(javax.swing.JDialog parentDialog) {
        initComponents();
        if (parentDialog != null) {
            WindowListener[] wls = calendarDialog.getWindowListeners();
            calendarDialog.remove(mainPanel);
            calendarDialog = new javax.swing.JDialog(parentDialog, false);
            for (int i = 0; i < wls.length; i++) {
                calendarDialog.addWindowListener(wls[i]);
            }
            calendarDialog.setDefaultCloseOperation(javax.swing.JDialog.HIDE_ON_CLOSE);
            calendarDialog.setResizable(false);
            calendarDialog.setUndecorated(true);
            calendarDialog.getContentPane().setLayout(new GridLayout());
            calendarDialog.getContentPane().add(mainPanel);
        }
        initPanel();
    }

    public CalendarPanel(javax.swing.JFrame parentFrame) {
        initComponents();
        if (parentFrame != null) {
            WindowListener[] wls = calendarDialog.getWindowListeners();
            calendarDialog.remove(mainPanel);
            calendarDialog = new javax.swing.JDialog(parentFrame, false);
            for (int i = 0; i < wls.length; i++) {
                calendarDialog.addWindowListener(wls[i]);
            }
            calendarDialog.setDefaultCloseOperation(javax.swing.JDialog.HIDE_ON_CLOSE);
            calendarDialog.setResizable(false);
            calendarDialog.setUndecorated(true);
            calendarDialog.getContentPane().setLayout(new GridLayout());
            calendarDialog.getContentPane().add(mainPanel);
        }
        initPanel();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bulanPopupMenu = new javax.swing.JPopupMenu();
        bulanMenuItem1 = new javax.swing.JMenuItem();
        bulanMenuItem2 = new javax.swing.JMenuItem();
        bulanMenuItem3 = new javax.swing.JMenuItem();
        bulanMenuItem4 = new javax.swing.JMenuItem();
        bulanMenuItem5 = new javax.swing.JMenuItem();
        bulanMenuItem6 = new javax.swing.JMenuItem();
        bulanMenuItem7 = new javax.swing.JMenuItem();
        bulanMenuItem8 = new javax.swing.JMenuItem();
        bulanMenuItem9 = new javax.swing.JMenuItem();
        bulanMenuItem10 = new javax.swing.JMenuItem();
        bulanMenuItem11 = new javax.swing.JMenuItem();
        bulanMenuItem12 = new javax.swing.JMenuItem();
        tahunDialog = new javax.swing.JDialog();
        tahunField = new javax.swing.JTextField();
        calendarDialog = new javax.swing.JDialog();
        mainPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        bulanLaluButton = new javax.swing.JButton();
        bulanButton = new javax.swing.JButton();
        bulanDepanButton = new javax.swing.JButton();
        tahunLaluButton = new javax.swing.JButton();
        tahunButton = new javax.swing.JButton();
        tahunDepanButton = new javax.swing.JButton();
        numberPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jButton7 = new javax.swing.JButton();
        tanggalButton = new javax.swing.JButton();

        bulanPopupMenu.setName("bulanPopupMenu"); // NOI18N

        bulanMenuItem1.setText("Januari"); // NOI18N
        bulanMenuItem1.setName("bulanMenuItem1"); // NOI18N
        bulanPopupMenu.add(bulanMenuItem1);

        bulanMenuItem2.setText("Pebruari"); // NOI18N
        bulanMenuItem2.setName("bulanMenuItem2"); // NOI18N
        bulanPopupMenu.add(bulanMenuItem2);

        bulanMenuItem3.setText("Maret"); // NOI18N
        bulanMenuItem3.setName("bulanMenuItem3"); // NOI18N
        bulanPopupMenu.add(bulanMenuItem3);

        bulanMenuItem4.setText("April"); // NOI18N
        bulanMenuItem4.setName("bulanMenuItem4"); // NOI18N
        bulanPopupMenu.add(bulanMenuItem4);

        bulanMenuItem5.setText("Mei"); // NOI18N
        bulanMenuItem5.setName("bulanMenuItem5"); // NOI18N
        bulanPopupMenu.add(bulanMenuItem5);

        bulanMenuItem6.setText("Juni"); // NOI18N
        bulanMenuItem6.setName("bulanMenuItem6"); // NOI18N
        bulanPopupMenu.add(bulanMenuItem6);

        bulanMenuItem7.setText("Juli"); // NOI18N
        bulanMenuItem7.setName("bulanMenuItem7"); // NOI18N
        bulanPopupMenu.add(bulanMenuItem7);

        bulanMenuItem8.setText("Agustus"); // NOI18N
        bulanMenuItem8.setName("bulanMenuItem8"); // NOI18N
        bulanPopupMenu.add(bulanMenuItem8);

        bulanMenuItem9.setText("September"); // NOI18N
        bulanMenuItem9.setName("bulanMenuItem9"); // NOI18N
        bulanPopupMenu.add(bulanMenuItem9);

        bulanMenuItem10.setText("Oktober"); // NOI18N
        bulanMenuItem10.setName("bulanMenuItem10"); // NOI18N
        bulanPopupMenu.add(bulanMenuItem10);

        bulanMenuItem11.setText("Nopember"); // NOI18N
        bulanMenuItem11.setName("bulanMenuItem11"); // NOI18N
        bulanPopupMenu.add(bulanMenuItem11);

        bulanMenuItem12.setText("Desember"); // NOI18N
        bulanMenuItem12.setName("bulanMenuItem12"); // NOI18N
        bulanPopupMenu.add(bulanMenuItem12);

        tahunDialog.setName("tahunDialog"); // NOI18N
        tahunDialog.setResizable(false);
        tahunDialog.setUndecorated(true);
        tahunDialog.getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        tahunField.setText(""); // NOI18N
        tahunField.setName("tahunField"); // NOI18N
        tahunField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tahunFieldFocusLost(evt);
            }
        });
        tahunField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tahunFieldKeyPressed(evt);
            }
        });
        tahunDialog.getContentPane().add(tahunField);

        calendarDialog.setName("calendarDialog"); // NOI18N
        calendarDialog.setResizable(false);
        calendarDialog.setUndecorated(true);
        calendarDialog.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowDeactivated(java.awt.event.WindowEvent evt) {
                calendarDialogWindowDeactivated(evt);
            }
        });
        calendarDialog.getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        mainPanel.setBackground(java.awt.Color.yellow); // NOI18N
        mainPanel.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.orange)); // NOI18N
        mainPanel.setName("mainPanel"); // NOI18N
        mainPanel.setLayout(new java.awt.GridLayout(1, 0));
        calendarDialog.getContentPane().add(mainPanel);

        setName("Form"); // NOI18N
        setOpaque(false);

        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.setOpaque(false);

        bulanLaluButton.setText("<"); // NOI18N
        bulanLaluButton.setMargin(new java.awt.Insets(2, 2, 2, 2));
        bulanLaluButton.setName("bulanLaluButton"); // NOI18N
        bulanLaluButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bulanLaluButtonActionPerformed(evt);
            }
        });
        bulanLaluButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                anyButtonKeyPressed(evt);
            }
        });

        bulanButton.setText("Januari"); // NOI18N
        bulanButton.setMargin(new java.awt.Insets(2, 2, 2, 2));
        bulanButton.setName("bulanButton"); // NOI18N
        bulanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bulanButtonActionPerformed(evt);
            }
        });
        bulanButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                anyButtonKeyPressed(evt);
            }
        });

        bulanDepanButton.setText(">"); // NOI18N
        bulanDepanButton.setMargin(new java.awt.Insets(2, 2, 2, 2));
        bulanDepanButton.setName("bulanDepanButton"); // NOI18N
        bulanDepanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bulanDepanButtonActionPerformed(evt);
            }
        });
        bulanDepanButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                anyButtonKeyPressed(evt);
            }
        });

        tahunLaluButton.setText("<"); // NOI18N
        tahunLaluButton.setMargin(new java.awt.Insets(2, 2, 2, 2));
        tahunLaluButton.setName("tahunLaluButton"); // NOI18N
        tahunLaluButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tahunLaluButtonActionPerformed(evt);
            }
        });
        tahunLaluButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                anyButtonKeyPressed(evt);
            }
        });

        tahunButton.setText("2000"); // NOI18N
        tahunButton.setMargin(new java.awt.Insets(2, 2, 2, 2));
        tahunButton.setName("tahunButton"); // NOI18N
        tahunButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tahunButtonActionPerformed(evt);
            }
        });
        tahunButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                anyButtonKeyPressed(evt);
            }
        });

        tahunDepanButton.setText(">"); // NOI18N
        tahunDepanButton.setMargin(new java.awt.Insets(2, 2, 2, 2));
        tahunDepanButton.setName("tahunDepanButton"); // NOI18N
        tahunDepanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tahunDepanButtonActionPerformed(evt);
            }
        });
        tahunDepanButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                anyButtonKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(bulanLaluButton)
                .addGap(0, 0, 0)
                .addComponent(bulanButton, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(bulanDepanButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                .addComponent(tahunLaluButton)
                .addGap(0, 0, 0)
                .addComponent(tahunButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(tahunDepanButton))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(bulanLaluButton)
                .addComponent(bulanButton)
                .addComponent(bulanDepanButton)
                .addComponent(tahunLaluButton)
                .addComponent(tahunButton)
                .addComponent(tahunDepanButton))
        );

        numberPanel.setName("numberPanel"); // NOI18N
        numberPanel.setOpaque(false);
        numberPanel.setLayout(new java.awt.GridLayout(7, 7));

        jLabel1.setFont(jLabel1.getFont().deriveFont(jLabel1.getFont().getStyle() | java.awt.Font.BOLD));
        jLabel1.setForeground(new java.awt.Color(204, 0, 0)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Min"); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N
        numberPanel.add(jLabel1);

        jLabel4.setFont(jLabel4.getFont().deriveFont(jLabel4.getFont().getStyle() | java.awt.Font.BOLD));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Sen"); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N
        numberPanel.add(jLabel4);

        jLabel7.setFont(jLabel7.getFont().deriveFont(jLabel7.getFont().getStyle() | java.awt.Font.BOLD));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Sel"); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N
        numberPanel.add(jLabel7);

        jLabel6.setFont(jLabel6.getFont().deriveFont(jLabel6.getFont().getStyle() | java.awt.Font.BOLD));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Rab"); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N
        numberPanel.add(jLabel6);

        jLabel5.setFont(jLabel5.getFont().deriveFont(jLabel5.getFont().getStyle() | java.awt.Font.BOLD));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Kam"); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N
        numberPanel.add(jLabel5);

        jLabel3.setFont(jLabel3.getFont().deriveFont(jLabel3.getFont().getStyle() | java.awt.Font.BOLD));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Jum"); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N
        numberPanel.add(jLabel3);

        jLabel2.setFont(jLabel2.getFont().deriveFont(jLabel2.getFont().getStyle() | java.awt.Font.BOLD));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Sab"); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N
        numberPanel.add(jLabel2);

        jPanel2.setName("jPanel2"); // NOI18N
        jPanel2.setOpaque(false);

        jButton7.setText("Today"); // NOI18N
        jButton7.setMargin(new java.awt.Insets(2, 2, 2, 2));
        jButton7.setName("jButton7"); // NOI18N
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jButton7.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                anyButtonKeyPressed(evt);
            }
        });

        tanggalButton.setText("Tanggal"); // NOI18N
        tanggalButton.setName("tanggalButton"); // NOI18N
        tanggalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tanggalButtonActionPerformed(evt);
            }
        });
        tanggalButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                anyButtonKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(tanggalButton, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jButton7)
                .addComponent(tanggalButton))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(numberPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(numberPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tahunFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tahunFieldFocusLost
        tahunDialog.setVisible(false);
    }//GEN-LAST:event_tahunFieldFocusLost

    private void tahunFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tahunFieldKeyPressed
        int keyCode = evt.getKeyCode();
        switch (keyCode) {
            case KeyEvent.VK_ESCAPE:
                tahunDialog.setVisible(false);
                break;
            case KeyEvent.VK_ENTER:
                try {
                    int thn = Integer.parseInt(tahunField.getText().trim());
                    tahunDialog.setVisible(false);
                    gCal.set(GregorianCalendar.YEAR, thn);
                    isiTextCalendar();
                } catch (NumberFormatException numberFormatException) {
                }
                break;
        }
    }//GEN-LAST:event_tahunFieldKeyPressed

    private void calendarDialogWindowDeactivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_calendarDialogWindowDeactivated
        TimerTask timerTask = new TimerTask() {
            @Override
            public void run() {
                if (!tahunField.hasFocus()) {
                    calendarDialog.setVisible(false);
                }
            }
        };
        Timer timer = new Timer();
        timer.schedule(timerTask, 200);
    }//GEN-LAST:event_calendarDialogWindowDeactivated

    private void anyButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_anyButtonKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            new DelayedTask(200) {
                @Override
                public void run() {
                    calendarDialog.setVisible(false);
                }
            };
        }
    }//GEN-LAST:event_anyButtonKeyPressed

    private void bulanButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bulanButtonActionPerformed
        pilihBulan();
    }//GEN-LAST:event_bulanButtonActionPerformed

    private void bulanLaluButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bulanLaluButtonActionPerformed
        bulanLalu();
    }//GEN-LAST:event_bulanLaluButtonActionPerformed

    private void bulanDepanButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bulanDepanButtonActionPerformed
        bulanDepan();
    }//GEN-LAST:event_bulanDepanButtonActionPerformed

    private void tahunButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tahunButtonActionPerformed
        pilihTahun();
    }//GEN-LAST:event_tahunButtonActionPerformed

    private void tahunLaluButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tahunLaluButtonActionPerformed
        tahunLalu();
    }//GEN-LAST:event_tahunLaluButtonActionPerformed

    private void tahunDepanButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tahunDepanButtonActionPerformed
        tahunDepan();
    }//GEN-LAST:event_tahunDepanButtonActionPerformed

    private void tanggalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tanggalButtonActionPerformed
        pilihTanggal();
    }//GEN-LAST:event_tanggalButtonActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        today();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void initPanel() {
        initCalendar();
        calendarDialog.setSize(270, 230);
        mainPanel.add(this);
    }

    private void initCalendar() {
        gCal = (GregorianCalendar) GregorianCalendar.getInstance();
        tanggal = gCal.getTime();
        bulanButton.setText(NAMA_BULAN[gCal.get(GregorianCalendar.MONTH)]);
        tahunButton.setText(String.valueOf(gCal.get(GregorianCalendar.YEAR)));
        calendarButtons = new JButton[42];
        ActionListener actionListener = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                tanggalDipilih(e);
            }
        };
        KeyAdapter keyAdapter = new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent e) {
                super.keyPressed(e);
                anyButtonKeyPressed(e);
            }
        };
        Insets m = new Insets(2, 2, 2, 2);
        for (int i=0; i < calendarButtons.length; i++) {
            calendarButtons[i] = new JButton();
            calendarButtons[i].setFont(numberPanel.getFont());
            calendarButtons[i].setMargin(m);
            calendarButtons[i].addActionListener(actionListener);
            calendarButtons[i].addKeyListener(keyAdapter);
            numberPanel.add(calendarButtons[i]);
        }
        normalFont = calendarButtons[0].getFont();
        selectedFont = normalFont.deriveFont(Font.BOLD).deriveFont(
                ((float) normalFont.getSize() + 3));
        tanggalButton.setText(NAMA_HARI[gCal.get(GregorianCalendar.DAY_OF_WEEK)] + ", " +
                gCal.get(GregorianCalendar.DATE) + " " +
                NAMA_BULAN[gCal.get(GregorianCalendar.MONTH)] + " " +
                gCal.get(GregorianCalendar.YEAR));
        isiTextCalendar();
    }

    private void isiTextCalendar() {
        gCal.set(GregorianCalendar.DAY_OF_MONTH, 1);
        int start = gCal.get(GregorianCalendar.DAY_OF_WEEK)-1;
        int maxDay = gCal.getActualMaximum(GregorianCalendar.DATE);
        int d = 1;
        GregorianCalendar tCal = (GregorianCalendar) GregorianCalendar.getInstance();
        tCal.setTime(tanggal);
        for (int i=0; i < calendarButtons.length; i++) {
            if (i >= start && d <= maxDay) {
                calendarButtons[i].setEnabled(true);
                calendarButtons[i].setText(String.valueOf(d));
                if (gCal.get(GregorianCalendar.YEAR) == tCal.get(GregorianCalendar.YEAR) &&
                        gCal.get(GregorianCalendar.MONTH) == tCal.get(GregorianCalendar.MONTH) &&
                        d == tCal.get(GregorianCalendar.DATE)) {
                    calendarButtons[i].setFont(selectedFont);
                    calendarButtons[i].setForeground(Color.BLUE);
                } else {
                    calendarButtons[i].setFont(normalFont);
                    calendarButtons[i].setForeground(Color.BLACK);
                }
                d++;
            } else {
                calendarButtons[i].setEnabled(false);
                calendarButtons[i].setText("");
                calendarButtons[i].setFont(normalFont);
                calendarButtons[i].setForeground(Color.BLACK);
            }
        }
        bulanButton.setText(NAMA_BULAN[gCal.get(GregorianCalendar.MONTH)]);
        tahunButton.setText(String.valueOf(gCal.get(GregorianCalendar.YEAR)));
    }

    public void tanggalDipilih(ActionEvent e) {
        String cmd = e.getActionCommand();
        try {
            int d = Integer.parseInt(cmd);
            gCal.set(GregorianCalendar.DATE, d);
            tanggal = gCal.getTime();
            tanggalButton.setText(NAMA_HARI[gCal.get(GregorianCalendar.DAY_OF_WEEK)] + ", " +
                    gCal.get(GregorianCalendar.DATE) + " " +
                    NAMA_BULAN[gCal.get(GregorianCalendar.MONTH)] + " " +
                    gCal.get(GregorianCalendar.YEAR));
        } catch (NumberFormatException numberFormatException) {
        }
        for (int i = 0; i < calendarButtons.length; i++) {
            if (calendarButtons[i].isEnabled() &&
                    !calendarButtons[i].getActionCommand().equals(cmd)) {
                calendarButtons[i].setForeground(Color.BLACK);
                calendarButtons[i].setFont(normalFont);
            } else {
                calendarButtons[i].setForeground(Color.BLUE);
                calendarButtons[i].setFont(selectedFont);
            }
        }
        calendarDialog.setVisible(false);
    }

    public void pilihBulan() {
        bulanPopupMenu.show(bulanButton, 0, bulanButton.getSize().height);
    }

    public void bulanJanuari() {
        gCal.set(GregorianCalendar.MONTH, GregorianCalendar.JANUARY);
        isiTextCalendar();
    }

    public void bulanPebruari() {
        gCal.set(GregorianCalendar.MONTH, GregorianCalendar.FEBRUARY);
        isiTextCalendar();
    }

    public void bulanMaret() {
        gCal.set(GregorianCalendar.MONTH, GregorianCalendar.MARCH);
        isiTextCalendar();
    }

    public void bulanApril() {
        gCal.set(GregorianCalendar.MONTH, GregorianCalendar.APRIL);
        isiTextCalendar();
    }

    public void bulanMei() {
        gCal.set(GregorianCalendar.MONTH, GregorianCalendar.MAY);
        isiTextCalendar();
    }

    public void bulanJuni() {
        gCal.set(GregorianCalendar.MONTH, GregorianCalendar.JUNE);
        isiTextCalendar();
    }

    public void bulanJuli() {
        gCal.set(GregorianCalendar.MONTH, GregorianCalendar.JULY);
        isiTextCalendar();
    }

    public void bulanAgustus() {
        gCal.set(GregorianCalendar.MONTH, GregorianCalendar.AUGUST);
        isiTextCalendar();
    }

    public void bulanSeptember() {
        gCal.set(GregorianCalendar.MONTH, GregorianCalendar.SEPTEMBER);
        isiTextCalendar();
    }

    public void bulanOktober() {
        gCal.set(GregorianCalendar.MONTH, GregorianCalendar.OCTOBER);
        isiTextCalendar();
    }

    public void bulanNopember() {
        gCal.set(GregorianCalendar.MONTH, GregorianCalendar.NOVEMBER);
        isiTextCalendar();
    }

    public void bulanDesember() {
        gCal.set(GregorianCalendar.MONTH, GregorianCalendar.DECEMBER);
        isiTextCalendar();
    }

    public void bulanLalu() {
        gCal.add(GregorianCalendar.MONTH, -1);
        isiTextCalendar();
    }

    public void bulanDepan() {
        gCal.add(GregorianCalendar.MONTH, 1);
        isiTextCalendar();
    }

    public void tahunLalu() {
        int thn = gCal.get(GregorianCalendar.YEAR)-1;
        gCal.set(GregorianCalendar.YEAR, thn);
        isiTextCalendar();
    }

    public void tahunDepan() {
        int thn = gCal.get(GregorianCalendar.YEAR)+1;
        gCal.set(GregorianCalendar.YEAR, thn);
        isiTextCalendar();
    }

    public Date getTanggal() {
        return tanggal;
    }

    public void pilihTahun() {
        Point pt = tahunButton.getLocationOnScreen();
        tahunField.setText(tahunButton.getText());
        tahunDialog.setSize(60, 20);
        tahunDialog.setLocation(pt.x, pt.y + tahunButton.getSize().height);
        tahunDialog.setVisible(true);
    }

    public void today() {
        GregorianCalendar gc = (GregorianCalendar) GregorianCalendar.getInstance();
        tanggal = gc.getTime();
        gCal.setTime(tanggal);
        isiTextCalendar();
        int d = gc.get(GregorianCalendar.DATE);
        for (int i=0; i < calendarButtons.length; i++) {
            if (calendarButtons[i].getText().equals(String.valueOf(d))) {
                calendarButtons[i].doClick();
            }
        }
    }

    public void pilihTanggal() {
        gCal.setTime(tanggal);
        isiTextCalendar();
    }

    public void tampilkanDialog(Component pemanggil, Date tgl) {
        Point pt = pemanggil.getLocationOnScreen();
        pt.y += pemanggil.getHeight();
        Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
        if (pt.x + getWidth() > d.width) {
            pt.x -= (pt.x + getWidth() - d.width);
        }
        if (pt.y + getHeight() > d.height) {
            pt.y -= (pt.y + getWidth() - d.height);
        }
        if (tgl != null) {
            tanggal = tgl;
            gCal.setTime(tgl);
            tanggalButton.setText(NAMA_HARI[gCal.get(GregorianCalendar.DAY_OF_WEEK)] + ", " +
                    gCal.get(GregorianCalendar.DATE) + " " +
                    NAMA_BULAN[gCal.get(GregorianCalendar.MONTH)] + " " +
                    gCal.get(GregorianCalendar.YEAR));
            pilihTanggal();
        }
        calendarDialog.setLocation(pt);
        calendarDialog.setVisible(true);
    }

    ///////////////////////////////////////////////////////////
    // STATIC METHODS
    ///////////////////////////////////////////////////////////

//    public static String dateToString(GregorianCalendar gregorianCalendar) {
//        String strDate = null;
//        if (gregorianCalendar != null) {
//            strDate = gregorianCalendar.get(GregorianCalendar.DATE) + "-" +
//                    (gregorianCalendar.get(GregorianCalendar.MONTH)+1) + "-" +
//                    gregorianCalendar.get(GregorianCalendar.YEAR);
//        }
//        return strDate;
//    }
//
//    public static String dateToSqlString(Date date) {
//        return dateToSqlString(date,
//                (GregorianCalendar) GregorianCalendar.getInstance());
//    }
//
//    public static String dateToSqlString(Date date, GregorianCalendar gregorianCalendar) {
//        String strDate = null;
//        if (date != null && gregorianCalendar != null) {
//            gregorianCalendar.setTime(date);
//            strDate = gregorianCalendar.get(GregorianCalendar.YEAR) + "-" +
//                    (gregorianCalendar.get(GregorianCalendar.MONTH)+1) + "-" +
//                    gregorianCalendar.get(GregorianCalendar.DATE);
//        }
//        return strDate;
//    }
//
//    public static String dateToString(Date date) {
//        return dateToString(date,
//                (GregorianCalendar) GregorianCalendar.getInstance());
//    }
//
//    public static String dateToString(Date date, GregorianCalendar gregorianCalendar) {
//        String strDate = null;
//        if (date != null && gregorianCalendar != null) {
//            gregorianCalendar.setTime(date);
//            strDate = gregorianCalendar.get(GregorianCalendar.DATE) + "-" +
//                    (gregorianCalendar.get(GregorianCalendar.MONTH)+1) + "-" +
//                    gregorianCalendar.get(GregorianCalendar.YEAR);
//        }
//        return strDate;
//    }
//
//    public static int getDateField(Date date, int field) {
//        int val = -1;
//        if (date != null) {
//            GregorianCalendar gCal = (GregorianCalendar) GregorianCalendar.getInstance();
//            gCal.setTime(date);
//            val = gCal.get(field);
//        }
//        return val;
//    }
//
    public static String getNamaBulan(int month) {
        return NAMA_BULAN[month];
    }

    public static String getNamaBulanPendek(int month) {
        return NAMA_BULAN_PENDEK[month];
    }

    public static String getNamaHari(int dayOfWeek) {
        return NAMA_HARI[dayOfWeek];
    }
//
//    public static Date stringToDate(String string) throws NumberFormatException {
//        try {
//            return stringToDate(string,
//                    (GregorianCalendar) GregorianCalendar.getInstance());
//        } catch (NumberFormatException ex) {
//            throw ex;
//        }
//    }
//
//    public static Date stringToDate(String string, GregorianCalendar gregorianCalendar) throws NumberFormatException {
//        Date dt = null;
//        if (string != null && string.length() > 0 && gregorianCalendar != null) {
//            String[] arr = string.split("-");
//            if (arr.length == 3) {
//                try {
//                    gregorianCalendar.set(Integer.parseInt(arr[2]),
//                            Integer.parseInt(arr[1])-1,
//                            Integer.parseInt(arr[0]),
//                            0, 0, 0);
//                    dt = gregorianCalendar.getTime();
//                } catch (NumberFormatException ex) {
//                    throw ex;
//                }
//            }
//        }
//        return dt;
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bulanButton;
    private javax.swing.JButton bulanDepanButton;
    private javax.swing.JButton bulanLaluButton;
    private javax.swing.JMenuItem bulanMenuItem1;
    private javax.swing.JMenuItem bulanMenuItem10;
    private javax.swing.JMenuItem bulanMenuItem11;
    private javax.swing.JMenuItem bulanMenuItem12;
    private javax.swing.JMenuItem bulanMenuItem2;
    private javax.swing.JMenuItem bulanMenuItem3;
    private javax.swing.JMenuItem bulanMenuItem4;
    private javax.swing.JMenuItem bulanMenuItem5;
    private javax.swing.JMenuItem bulanMenuItem6;
    private javax.swing.JMenuItem bulanMenuItem7;
    private javax.swing.JMenuItem bulanMenuItem8;
    private javax.swing.JMenuItem bulanMenuItem9;
    private javax.swing.JPopupMenu bulanPopupMenu;
    private javax.swing.JDialog calendarDialog;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel numberPanel;
    private javax.swing.JButton tahunButton;
    private javax.swing.JButton tahunDepanButton;
    private javax.swing.JDialog tahunDialog;
    private javax.swing.JTextField tahunField;
    private javax.swing.JButton tahunLaluButton;
    private javax.swing.JButton tanggalButton;
    // End of variables declaration//GEN-END:variables

}
